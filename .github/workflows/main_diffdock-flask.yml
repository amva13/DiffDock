# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - diffdock-flask

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: bioconda, conda-forge, defaults
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true
          auto-activate-base: true
          
      - name: Create and start Conda environment, Install Deps, Build Flask
        run: |
          echo "Creating Conda Environment from environment.yml ..."
          conda env create -n diffdock -f environment.yml
          echo "activating diffdock Conda Environment..."
          conda activate diffdock
          echo "Installing Flask"
          conda install flask
          echo "Installing werkzeug"
          conda install werkzeug
          echo "Installing esm"
          conda install -c conda-forge fair-esm
          echo "Installing torch"
          conda install pytorch==1.11.0 pytorch-cuda=11.7 -c pytorch -c nvidia
          echo "Building Flask Application..."
          python application.py build

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'diffdock-flask'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ACFC7B173EE945E1B81828BF855F7857 }}

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      # - name: Zip artifact for deployment
      #   run: zip release.zip ./* -r

      # - name: Upload artifact for deployment jobs
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: python-app
      #     path: |
      #       release.zip
      #       !venv/

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: python-app

  #     # - name: Unzip artifact for deployment
  #     #   run: unzip release.zip

  #     - name: 'Deploy to Azure Web App'
  #       uses: azure/webapps-deploy@v2
  #       id: deploy-to-webapp
  #       with:
  #         app-name: 'diffdock-flask'
  #         slot-name: 'Production'
  #         publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ACFC7B173EE945E1B81828BF855F7857 }}
